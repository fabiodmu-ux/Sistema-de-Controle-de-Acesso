<!DOCTYPE html>
<html lang="pt-br" data-bs-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login | Sistema de Controle de Acesso</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    
    <style>
        /* 1. Modernização Visual: Paleta de Cores e Fundo */
        body {
            /* Fundo simulando um sistema de segurança/biometria */
            background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), 
                        url('https://images.unsplash.com/photo-1558564253-62b1b3b1c676?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D') no-repeat center center fixed;
            background-size: cover;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            color: #f8f9fa; /* Texto claro no fundo escuro */
        }
        
        .login-container {
            /* 5. Componentização: Card de Login */
            background-color: rgba(255, 255, 255, 0.95); /* Leve transparência */
            padding: 2.5rem;
            border-radius: 1rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3);
            max-width: 450px;
            width: 90%; /* 2. Responsividade */
        }

        /* 4. Acessibilidade: Contraste para o Card */
        .login-container h2, .login-container label, .login-container p {
            color: #212529; 
        }

        /* 6. Temas (Escuro/Claro) - Ajuste para Tema Escuro */
        [data-bs-theme="dark"] body {
            background: #212529;
            color: #e9ecef;
        }

        [data-bs-theme="dark"] .login-container {
             background-color: rgba(33, 37, 41, 0.95);
        }

        [data-bs-theme="dark"] .login-container h2, 
        [data-bs-theme="dark"] .login-container label, 
        [data-bs-theme="dark"] .login-container p {
            color: #e9ecef;
        }
    </style>
</head>
<body>

    <div class="login-container">
        <h2 class="text-center mb-4">
            <i class="bi bi-shield-lock-fill text-primary me-2" aria-hidden="true"></i>
            Login do Sistema
        </h2>

        <div id="feedback-alert" class="alert alert-danger d-none" role="alert" aria-live="assertive">
            <i class="bi bi-exclamation-triangle-fill me-2" aria-hidden="true"></i>
            Erro: Usuário ou senha inválidos.
        </div>

        <form id="login-form">
            <div class="mb-3">
                <label for="email" class="form-label"><i class="bi bi-envelope-fill me-1" aria-hidden="true"></i> E-mail</label>
                <input type="email" class="form-control" id="email" 
                       placeholder="usuario@dominio.com" required 
                       aria-required="true" aria-label="E-mail do usuário"
                       tabindex="1"> </div>
            <div class="mb-4">
                <label for="password" class="form-label"><i class="bi bi-key-fill me-1" aria-hidden="true"></i> Senha</label>
                <input type="password" class="form-control" id="password" 
                       placeholder="Digite sua senha" required 
                       aria-required="true" aria-label="Senha do usuário"
                       tabindex="2">
            </div>
            
            <button type="submit" class="btn btn-primary w-100 py-2" id="login-button" tabindex="3">
                <span id="spinner" class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true"></span>
                <span id="button-text">Entrar no Sistema</span>
            </button>
            
            <p class="mt-3 text-center">
                <small><a href="#" class="text-secondary text-decoration-none">Esqueceu a senha?</a></small>
            </p>
        </form>

        <div class="form-check form-switch mt-4 text-center">
            <input class="form-check-input" type="checkbox" role="switch" id="theme-switch" aria-label="Alternar tema claro e escuro">
            <label class="form-check-label text-secondary" for="theme-switch">
                <i class="bi bi-sun-fill me-1" aria-hidden="true"></i>Tema Escuro
            </label>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const themeSwitch = document.getElementById('theme-switch');
            const htmlElement = document.documentElement;
            const loginForm = document.getElementById('login-form');
            const loginButton = document.getElementById('login-button');
            const spinner = document.getElementById('spinner');
            const buttonText = document.getElementById('button-text');
            const feedbackAlert = document.getElementById('feedback-alert');

            // --- Lógica de Temas ---
            function applyTheme(theme) {
                htmlElement.setAttribute('data-bs-theme', theme);
                localStorage.setItem('theme', theme);
                themeSwitch.checked = (theme === 'dark');
                
                const themeLabel = document.querySelector('label[for="theme-switch"]');
                themeLabel.innerHTML = theme === 'dark' 
                    ? '<i class="bi bi-moon-fill me-1" aria-hidden="true"></i>Tema Claro'
                    : '<i class="bi bi-sun-fill me-1" aria-hidden="true"></i>Tema Escuro';
            }

            const savedTheme = localStorage.getItem('theme') || 'light';
            applyTheme(savedTheme);

            themeSwitch.addEventListener('change', () => {
                const newTheme = themeSwitch.checked ? 'dark' : 'light';
                applyTheme(newTheme);
            });
            
            // --- Lógica de UX (Feedback e Loader) ---
            loginForm.addEventListener('submit', function(event) {
                event.preventDefault();
                
                // Mostrar Loader e Desativar Botão
                loginButton.disabled = true;
                spinner.classList.remove('d-none');
                buttonText.textContent = 'Autenticando...';
                feedbackAlert.classList.add('d-none'); // Esconde qualquer erro anterior

                // Simulação de requisição (2 segundos)
                setTimeout(() => {
                    const email = document.getElementById('email').value;
                    const password = document.getElementById('password').value;
                    
                    // Lógica de simulação: Falha se a senha for "123"
                    if (password === '123') {
                        // 3. UX: Feedback de Erro
                        feedbackAlert.classList.remove('d-none');
                        loginButton.classList.add('btn-danger'); // Sinal visual de erro
                        loginButton.classList.remove('btn-primary');
                        buttonText.textContent = 'Erro ao Entrar';
                        
                        setTimeout(() => {
                            loginButton.classList.remove('btn-danger');
                            loginButton.classList.add('btn-primary');
                            loginButton.disabled = false;
                            spinner.classList.add('d-none');
                            buttonText.textContent = 'Entrar no Sistema';
                        }, 2000);

                    } else {
                        // Sucesso (Redirecionamento para o Dashboard - index.html)
                        loginButton.classList.add('btn-success'); // Sinal visual de sucesso
                        buttonText.textContent = 'Sucesso!';
                        setTimeout(() => {
                            window.location.href = 'index.html'; 
                            // Redireciona para o dashboard do exemplo anterior
                        }, 1000);
                    }
                }, 2000);
            });
        });
    </script>
</body>
</html>
